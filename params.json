{"name":"MSCViewer","tagline":"A tool for visualization and analysis of sequence diagram chart models. To download a binary release, please go to the Release section below.","body":"### Welcome to the Homepage for MSCviewer \r\nMSCViewer is a tool for visualization and analysis of message sequence charts. Simply put, the tool loads a text file with a subset of lines in written in \r\na simple JSON format, and creates a sequence diagram model out of it. The user can navigate the model interactively, or even write Python script to analyze it.\r\n\r\nThe tool is extremely useful for visualization and interactive analysis of execution traces/logs for systems with a large number of cooperating \r\nentities (processes, threads, etc.). By interactive we mean the tool doesn't produce a static picture of a sequence diagram: the user can interactively\r\nopen as many entities as desired, sort them in the preferred order, search on events and interactions, filter undesired elements from the view, etc. \r\nOf course, if desired the user can also create a PNG capture of the current diagram. \r\n\r\nThis [screen capture](https://github.com/rattias/mscviewer/blob/master/doc/openstack_example.png) shows, for example, the use of MSCViewer in the context\r\nof OpenStack.\r\n\r\nMSCViewer can also be used to create sequence diagrams for documentation, by simply typing the model for the desired diagram in a text editor.\r\n\r\nThe real power of MSCViewer though comes from the integration with a Python engine. Through this, the user can write python scripts to navigate \r\nthe model. This opens a world of possibilities, including:\r\n\r\n* Flow-based Automated Testing: scripts can test that the trace produce by a system contains certain distributed computational flows, and that\r\n  such flows are operating as expected\r\n* Ability to create custom graphs from the data in the model\r\n\r\n### Binary Release\r\nWhile MSCViewer is opensource, if you want to save yourself the hassle of building you can pick up a prebuilt release in your favorite archive format:\r\n\r\n* [tar.gz archive](https://github.com/rattias/mscviewer/releases/download/v2.0Beta2/mscviewer_2.0B2.tgz)\r\n* [zip archive](https://github.com/rattias/mscviewer/releases/download/v2.0Beta2/mscviewer_2.0B2.tgz)\r\n\r\nJust uncompress it in any directory, and run the _bin/mscviewer_. For your convenience some example input files are provided in the _examples_ directory.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}